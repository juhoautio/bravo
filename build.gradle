buildscript {
	repositories {
		maven { url "https://plugins.gradle.org/m2/" }
	}
}

ext.versions = [
	flink		: '1.9.1',
	slf4j		: '1.7.25',
	logback	: '1.2.3',
	junit		: '4.12',
]

subprojects {
	apply plugin: 'java'
	apply plugin: 'maven'
	apply plugin: 'signing'

	group = 'com.king.bravo'
	version = '0.7'

	repositories {
		mavenCentral()
	}

	task javadocJar(type: Jar) {
	    classifier = 'javadoc'
	    from javadoc
	}

	task sourcesJar(type: Jar) {
	    classifier = 'sources'
	    from sourceSets.main.allSource
	}

	configurations.all {
		exclude module: 'commons-logging'
		exclude module: 'log4j'
		exclude module: 'slf4j-log4j12'
	}

	dependencies {

		testCompile group: 'junit', name: 'junit', version: versions.junit
		testRuntime group: 'ch.qos.logback', name: 'logback-classic', version: versions.logback
		testRuntime group: 'org.slf4j', name: 'log4j-over-slf4j', version: versions.slf4j
		testRuntime group: 'org.slf4j', name: 'jcl-over-slf4j', version: versions.slf4j
	}

	artifacts {
    archives javadocJar, sourcesJar
	}

	signing {
    sign configurations.archives
   }

	 tasks.withType(Sign) {
      onlyIf {project.hasProperty('release') && release}
	}

	uploadArchives {
	  repositories {
	    mavenDeployer {

				pom.project {
					name 'bravo'
					packaging 'jar'
					description 'Utilities for processing Flink checkpoints/savepoints'
					url 'https://github.com/king/bravo'

					scm {
						connection 'https://github.com/king/bravo.git'
						developerConnection 'https://github.com/king/bravo.git'
						url 'https://github.com/king/bravo'
					}

					licenses {
						license {
							name 'The Apache License, Version 2.0'
							url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
						}
					}

					developers {
						developer {
							id 'gyula'
							name 'Gyula Fora'
							email 'gyula.fora@king.com'
						}
					}
				}

	      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

	      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
	        authentication(userName: project.findProperty('nexusUsername') ?: '', password: project.findProperty('nexusPassword') ?: '')
	      }

	      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
	        authentication(userName: project.findProperty('nexusUsername') ?: '', password: project.findProperty('nexusPassword') ?: '')
	      }
	    }
      }
   }

}

wrapper {
	gradleVersion = 4.7
}
